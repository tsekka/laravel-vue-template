import { type ConfigEnv, defineConfig, type UserConfig } from 'vite';
import eslintPlugin from '@modyqyw/vite-plugin-eslint';
import stylelintPlugin from 'vite-plugin-stylelint';
import vuetify from '@vuetify/vite-plugin';
import vue from '@vitejs/plugin-vue';
import path from 'path';
import fs from 'fs';

// https://vitejs.dev/config/
export default ({ command }) =>
  defineConfig({
    // https://vitejs.dev/config/#base
    base: command === 'serve' ? '' : '/build/',
    // https://vitejs.dev/config/#server-options
    server: {
      host: 'laravel-vue-template.local',
      //   fs: {
      //     // Allow serving files from one level up to the project root
      //     allow: ['..'],
      //   },
    },
    publicDir: 'fake_dir_so_nothing_gets_copied',
    build: {
      manifest: true,
      outDir: './../../public/build',
      rollupOptions: {
        input: './src/main.ts',
        //   external: [],
      },
    },
    resolve: {
      // https://vitejs.dev/config/#resolve-alias
      alias: [
        {
          // vue @ shortcut fix
          find: '@/',
          replacement: `${path.resolve(__dirname, './src')}/`,
        },
        {
          find: 'src/',
          replacement: `${path.resolve(__dirname, './src')}/`,
        },
      ],
    },

    plugins: [
      // Vue3
      vue(),
      // Vuetify Loader
      // https://github.com/vuetifyjs/vuetify-loader
      vuetify({
        autoImport: true,
      }),
      // eslint
      // https://github.com/ModyQyW/vite-plugin-eslint
      eslintPlugin({
        fix: true,
      }),
      // Stylelint
      // https://github.com/ModyQyW/vite-plugin-stylelint
      stylelintPlugin({
        fix: true,
      }),
      // compress assets
      // https://github.com/vbenjs/vite-plugin-compression
      // viteCompression(),
      {
        name: 'blade',
        handleHotUpdate({ file, server }) {
          if (file.endsWith('.blade.php')) {
            server.ws.send({
              type: 'full-reload',
              path: '*',
            });
          }
        },
      },
    ],
    define: { 'process.env': {} },
    css: {
      // https://vitejs.dev/config/#css-preprocessoroptions
      preprocessorOptions: {
        sass: {
          additionalData: [
            // vuetify variable overrides
            '@import "@/styles/scss/variables.scss"',
            '@import "@/styles/scss/index.scss";',
          ].join('\n'),
        },
      },
    },
  });

// // Export vite config
// export default defineConfig(async (_args: ConfigEnv): Promise<UserConfig> => {
//   // Hook production build.
//   // if (_args.command === 'build') {
//   // Write meta data.
//   fs.writeFileSync(
//     path.resolve(path.join(__dirname, 'src/Meta.ts')),
//     `import type MetaInterface from '@/interfaces/MetaInterface';

// // This file is auto-generated by the build system.
// const meta: MetaInterface = {
//   version: '${require('./package.json').version}',
//   date: '${new Date().toISOString()}',
// };
// export default meta;
// `
//   );
//   // }

//   return config;
// });
